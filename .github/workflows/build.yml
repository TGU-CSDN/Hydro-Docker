# yaml-language-server: $schema=https://json.schemastore.org/github-workflow
name: Build Docker Image

on:
  push:
    branches:
      - main
      - dev
    tags:
      - v*
  pull_request:

env:
  REGISTRY_GHCR: ghcr.io
  TAG_PREFIX_GHCR: tgu-csdn
  REGISTRY_CODING: tgucsdn-docker.pkg.coding.net
  TAG_PREFIX_CODING: hydro-docker/hydro

jobs:
  build-and-push-backend:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: hydrooj-backend
      BUILD_CONTEXT: ./backend

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Coding.net registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_CODING }}
          username: ${{ secrets.CODING_DOCKER_USERNAME }}
          password: ${{ secrets.CODING_DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ env.TAG_PREFIX_GHCR }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY_CODING }}/${{ env.TAG_PREFIX_CODING }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT }}
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Inspect image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx imagetools inspect \
          ${{ steps.docker_build.outputs.imageid }}

  build-and-push-judge:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      IMAGE_NAME: hydrooj-judge
      BUILD_CONTEXT: ./judge

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Inspect builder
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"

      - name: Log in to the GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_GHCR }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to the Coding.net registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_CODING }}
          username: ${{ secrets.CODING_DOCKER_USERNAME }}
          password: ${{ secrets.CODING_DOCKER_PASSWORD }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY_GHCR }}/${{ env.TAG_PREFIX_GHCR }}/${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY_CODING }}/${{ env.TAG_PREFIX_CODING }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ${{ env.BUILD_CONTEXT }}
          builder: ${{ steps.buildx.outputs.name }}
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Inspect image
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker buildx imagetools inspect \
          ${{ steps.docker_build.outputs.imageid }}
